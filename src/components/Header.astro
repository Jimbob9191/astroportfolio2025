---
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
const isHomePage = pathname === '/';
const isCaseStudy = pathname.startsWith('/work/') && pathname !== '/work' && pathname !== '/work/';
const isWorkIndex = pathname === '/work' || pathname === '/work/';
const is404 = pathname === '/404';
const shouldBeWhite = (isHomePage || isCaseStudy) && !is404 && !isWorkIndex;
---

<header class="fixed top-0 left-0 w-full z-50 transition-all duration-300" id="header">
  <div class="container py-4 flex items-center justify-between">
    <a href="/" class={`font-display font-medium text-xl transition-colors duration-300 header-text ${shouldBeWhite ? 'text-white' : 'text-primary'}`}>James</a>
    
    <!-- Desktop Navigation -->
    <nav class="hidden md:block">
      <ul class="flex gap-8">
        <li>
          <a 
            href="/work" 
            class={`hover-underline transition-colors duration-300 header-text ${shouldBeWhite ? 'text-white' : 'text-primary'} ${currentPath.startsWith('work') ? 'active' : ''}`}>
            Work
          </a>
        </li>
        <li>
          <a 
            href="/photography" 
            class={`hover-underline transition-colors duration-300 header-text ${shouldBeWhite ? 'text-white' : 'text-primary'} ${currentPath.startsWith('photography') ? 'active' : ''}`}>
            Photography
          </a>
        </li>
        <li>
          <a 
            href="/about" 
            class={`hover-underline transition-colors duration-300 header-text ${shouldBeWhite ? 'text-white' : 'text-primary'} ${currentPath.startsWith('about') ? 'active' : ''}`}>
            About
          </a>
        </li>
      </ul>
    </nav>

    <!-- Mobile Hamburger Button -->
    <button 
      id="mobile-menu-button"
      class={`md:hidden flex flex-col justify-center items-center w-8 h-8 transition-colors duration-300 header-text ${shouldBeWhite ? 'text-white' : 'text-primary'}`}
      aria-label="Toggle mobile menu"
    >
      <span class="hamburger-line w-6 h-0.5 bg-current transition-all duration-300 ease-in-out"></span>
      <span class="hamburger-line w-6 h-0.5 bg-current transition-all duration-300 ease-in-out mt-1"></span>
      <span class="hamburger-line w-6 h-0.5 bg-current transition-all duration-300 ease-in-out mt-1"></span>
    </button>
  </div>

  <!-- Mobile Navigation Menu -->
  <div 
    id="mobile-menu" 
    class="md:hidden fixed inset-0 bg-white transform translate-x-full transition-transform duration-300 ease-in-out"
  >
    <div class="flex flex-col h-full bg-white">
      <!-- Mobile menu header -->
      <div class="container py-4 flex items-center justify-between border-b border-gray-200 bg-white">
        <a href="/" class="font-display font-medium text-xl text-primary">James</a>
        <button 
          id="mobile-menu-close"
          class="flex flex-col justify-center items-center w-8 h-8 text-primary"
          aria-label="Close mobile menu"
        >
          <span class="hamburger-line w-6 h-0.5 bg-current transform rotate-45 transition-all duration-300 ease-in-out"></span>
          <span class="hamburger-line w-6 h-0.5 bg-current transform -rotate-45 -mt-0.5 transition-all duration-300 ease-in-out"></span>
        </button>
      </div>
      
      <!-- Mobile menu content -->
      <nav class="flex-1 flex flex-col justify-center bg-white">
        <ul class="container space-y-8">
          <li>
            <a 
              href="/work" 
              class={`block text-3xl font-display font-medium transition-colors duration-300 text-primary hover:text-secondary ${currentPath.startsWith('work') ? 'text-secondary' : ''}`}
            >
              Work
            </a>
          </li>
          <li>
            <a 
              href="/photography" 
              class={`block text-3xl font-display font-medium transition-colors duration-300 text-primary hover:text-secondary ${currentPath.startsWith('photography') ? 'text-secondary' : ''}`}
            >
              Photography
            </a>
          </li>
          <li>
            <a 
              href="/about" 
              class={`block text-3xl font-display font-medium transition-colors duration-300 text-primary hover:text-secondary ${currentPath.startsWith('about') ? 'text-secondary' : ''}`}
            >
              About
            </a>
          </li>
        </ul>
        
        <!-- Mobile menu footer -->
        <div class="container pb-8 bg-white">
          <div class="flex flex-wrap gap-4 pt-8 border-t border-gray-200">
            <a href="https://linkedin.com/jamesmb" class="text-muted hover:text-primary transition-colors" target="_blank" rel="noopener">LinkedIn</a>
            <a href="https://instagram.com/jamesmb" class="text-muted hover:text-primary transition-colors" target="_blank" rel="noopener">Instagram</a>
            <a href="https://dribbble.com/jamesmb" class="text-muted hover:text-primary transition-colors" target="_blank" rel="noopener">Dribbble</a>
            <a href="https://twitter.com/jamesmb" class="text-muted hover:text-primary transition-colors" target="_blank" rel="noopener">Twitter</a>
          </div>
        </div>
      </nav>
    </div>
  </div>
</header>

<script>
  // Header background and text color on scroll
  const header = document.getElementById('header');
  const headerTexts = document.querySelectorAll('.header-text');
  const pathname = window.location.pathname;
  const isHomePage = pathname === '/';
  const isCaseStudy = pathname.startsWith('/work/') && pathname !== '/work' && pathname !== '/work/';
  const isWorkIndex = pathname === '/work' || pathname === '/work/';
  const is404 = pathname === '/404';
  const shouldBeWhite = (isHomePage || isCaseStudy) && !is404 && !isWorkIndex;
  
  const updateHeader = () => {
    if (window.scrollY > 50) {
      header.classList.add('bg-white/90', 'backdrop-blur-md', 'shadow-sm');
      headerTexts.forEach(text => text.classList.remove('text-white'));
      headerTexts.forEach(text => text.classList.add('text-primary'));
    } else {
      header.classList.remove('bg-white/90', 'backdrop-blur-md', 'shadow-sm');
      if (shouldBeWhite) {
        headerTexts.forEach(text => text.classList.add('text-white'));
        headerTexts.forEach(text => text.classList.remove('text-primary'));
      }
    }
  };

  window.addEventListener('scroll', updateHeader);
  
  // Initialize header state
  updateHeader();

  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const hamburgerLines = mobileMenuButton.querySelectorAll('.hamburger-line');

  const openMobileMenu = () => {
    mobileMenu.classList.remove('translate-x-full');
    mobileMenu.classList.add('translate-x-0');
    document.body.style.overflow = 'hidden';
    
    // Animate hamburger to X
    hamburgerLines[0].style.transform = 'rotate(45deg) translateY(6px)';
    hamburgerLines[1].style.opacity = '0';
    hamburgerLines[2].style.transform = 'rotate(-45deg) translateY(-6px)';
  };

  const closeMobileMenu = () => {
    mobileMenu.classList.remove('translate-x-0');
    mobileMenu.classList.add('translate-x-full');
    document.body.style.overflow = '';
    
    // Reset hamburger lines
    hamburgerLines[0].style.transform = '';
    hamburgerLines[1].style.opacity = '1';
    hamburgerLines[2].style.transform = '';
  };

  mobileMenuButton.addEventListener('click', openMobileMenu);
  mobileMenuClose.addEventListener('click', closeMobileMenu);

  // Close menu when clicking on navigation links
  const mobileNavLinks = mobileMenu.querySelectorAll('nav a');
  mobileNavLinks.forEach(link => {
    link.addEventListener('click', closeMobileMenu);
  });

  // Close menu when clicking outside
  mobileMenu.addEventListener('click', (e) => {
    if (e.target === mobileMenu) {
      closeMobileMenu();
    }
  });

  // Close menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !mobileMenu.classList.contains('translate-x-full')) {
      closeMobileMenu();
    }
  });
</script>

<style>
  .active {
    font-weight: 500;
  }
  .active::after {
    @apply w-full;
  }

  /* Hamburger animation styles */
  .hamburger-line {
    transform-origin: center;
  }

  /* Ensure mobile menu is above everything */
  #mobile-menu {
    z-index: 9999;
  }
</style>